name: Backport
on:
  workflow_dispatch:
  pull_request:
    
permissions:
  contents: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.branches.outputs.json }}
    steps:
      - name: List branches
        id: branches
        run: |
          BRANCHES=$(git ls-remote --heads ${{ github.event.repository.html_url }} | grep release | cut -f2 | cut -d"/" -f3 | jq -R | jq -cs)
          echo "json=${BRANCHES}" | tee -a "${GITHUB_OUTPUT}"

  backport:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        branch: ${{ fromJson(needs.prepare.outputs.branches) }}
    env:
      HEAD_BRANCH: backport/${{ matrix.branch }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
      - name: merge
        run: |
          git switch -C ${{ env.HEAD_BRANCH }}
          git fetch origin/master
          git config user.name ${{ github.actor }}
          git config user.email noreply@github.com
          git merge origin/master
      - name: pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh pr create 
            --base ${{ matrix.branch }}
            --head ${{ env.HEAD_BRANCH }}
            --title "backport to ${{ matrix.branch }}"
            --body "[runs](${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }})"
                        
